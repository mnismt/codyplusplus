name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Extension
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [20.x]
        vscode-version: [stable]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.11.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Compile
        run: pnpm run compile

      # Run tests on Linux
      - name: Run tests (Linux)
        if: runner.os == 'Linux'
        run: xvfb-run -a pnpm test
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}

      # Run tests on macOS and Windows
      - name: Run tests (macOS/Windows)
        if: runner.os != 'Linux'
        run: pnpm test
        env:
          VSCODE_VERSION: ${{ matrix.vscode-version }}

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.vscode-version }}
          path: .vscode-test/
          if-no-files-found: ignore
